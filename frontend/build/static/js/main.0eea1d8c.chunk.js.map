{"version":3,"sources":["redux/reducer/productsListReducer.js","redux/actionTypes/productActionTypes.js","redux/reducer/productDetailReducer.js","redux/reducer/cartReducer.js","redux/actionTypes/cartActionTypes.js","redux/reducer/userLoginReducer.js","redux/actionTypes/userActionTypes.js","redux/reducer/userRegisterReducer.js","redux/reducer/userDetailReducer.js","redux/reducer/userUpdateReducer.js","redux/reducer/orderCreateReducer.js","redux/actionTypes/orderActionTypes.js","redux/reducer/orderDetailsReducer.js","redux/reducer/orderPayReducer.js","redux/reducer/ordersReducer.js","redux/reducer/adminUserListReducer.js","redux/reducer/adminUserDeleteReducer.js","redux/reducer/adminUserUpdateReducer.js","redux/reducer/productDeleteReducer.js","redux/reducer/productCreateReducer.js","redux/reducer/productUpdateReducer.js","redux/reducer/orderListReducer.js","redux/reducer/orderDeliverReducer.js","redux/reducer/reviewCreateReducer.js","redux/reducer/productTopReducer.js","redux/reducer/index.js","redux/store.js","components/SearchBox.js","components/Header.js","redux/actions/userActions.js","components/Footer.js","components/Rating.js","components/Product.js","redux/actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/ProductCarousel.js","container/HomePage.js","components/Meta.js","container/ProductPage.js","redux/actions/cartAtcions.js","container/CartPage.js","components/Form.js","container/LoginPage.js","container/RegisterPage.js","container/ProfilePage.js","redux/actions/orderActions.js","components/CheckoutSteps.js","container/ShippingPage.js","container/PayementPage.js","container/PlaceOrderPage.js","container/OrderPage.js","container/UserListPage.js","container/UserEditPage.js","container/ProductListPage.js","container/ProductEditPage.js","container/OrderListPage.js","App.js","serviceWorker.js","index.js"],"names":["initialStateProducts","loading","products","error","productsListReducer","state","action","type","payload","page","pages","initialStateProduct","product","productDetailReducer","initialState","cartItems","shippingAddress","cartReducer","item","existItem","find","element","map","filter","paymentMethod","userInfo","userLoginReducer","userRegisterReducer","user","userDetailsReducer","success","userUpdateReducer","order","orderCreateReducer","initialStateOrder","_id","taxPrice","shippingPrice","totalPrice","isPaid","orderItems","address","city","postalCode","country","orderDetailsReducer","orderPayReducer","orders","ordersReducer","usersListReducer","users","userDeleteReducer","userUpdateAdminReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","orderListReducer","orderDeliverReducer","reviewCreateReducer","productTopRatingReducer","rootReducer","combineReducers","productList","productDetail","productDelete","productCreate","productUpdate","productTopRating","cart","userLogin","userRegister","userDetails","userUpdate","usersList","userDelete","userUpdateAdmin","orderCreate","orderDetails","orderPay","orderDeliver","ordersMyList","orderList","reviewCreate","cartItemFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","onSubmit","event","preventDefault","trim","push","inline","Control","value","placeholder","name","className","onChange","e","target","Button","vairant","Header","dispatch","useDispatch","useSelector","Navbar","bg","variant","expand","to","Brand","Toggle","aria-controls","Collapse","id","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Container","Row","Col","Rating","props","rating","numReviews","color","style","Product","image","price","Card","width","Img","src","Body","Title","Text","as","fetchProducts","pageNumber","a","axios","get","data","response","message","fetchProduct","Loader","Spinner","animation","height","margin","display","Message","children","Alert","Paginate","Pagination","Array","keys","x","key","active","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomePage","match","params","Helmet","content","sm","md","lg","xl","Meta","description","ProductPage","productId","qty","setQty","reviewRating","setRating","reviewComment","setComment","reviewCreateError","reviewCreateSuccess","alert","countInStock","reviews","ListGroup","flush","disabled","length","review","createdAt","substring","comment","comments","getState","config","headers","Authorization","token","post","Group","controlId","Label","row","addTocart","setItem","stringify","console","log","CartPage","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","Form","xs","LoginPage","redirect","email","setEmail","password","setPassword","res","loginUser","RegisterPage","setName","confirmPassword","setConfirmPassword","setMessage","registerUser","ProfilePage","errorOrderList","loadingOrderList","put","updateUserProfil","Table","striped","bordered","hover","responsive","isDelivered","CheckoutSteps","step1","step2","step3","step4","ShippingPage","setAddress","setCity","setPostalCode","setCountry","required","setPaymentMethod","Check","label","checked","PlaceOrderPage","addDecimal","num","Math","round","itemsPrice","index","createOrder","OrderPage","sdkReady","setSdkReady","orderId","loadingPay","successPay","sucess","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","deliveredAt","isPaidAt","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListPage","successDelete","deleteHandler","confirm","delete","deleteUser","pathname","userName","userEmail","userIsAdmin","UserEditPage","useHistory","userId","setIsAdmin","updatedUser","updateLoading","updateError","ProductListPage","createLoading","createError","createSuccess","deleteLoading","errorDelete","deleteProduct","category","brand","ProductEditPage","setPrice","setImage","setBrand","setCategory","setDescription","setCountInStock","uploading","setUploading","uploadHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListPage","paidAt","App","path","exact","component","PaymentMethodPage","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0eea1d8c.chunk.js","sourcesContent":["import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS,  PRODUCT_LIST_FAIL} from '../actionTypes/productActionTypes';\n\nconst initialStateProducts = {\n    loading : false,\n    products : [],\n    error : false\n};\n\nconst productsListReducer = (state = initialStateProducts, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { \n                ...state,\n                loading : true , \n            };\n        case PRODUCT_LIST_SUCCESS:\n            return { \n                ...state,\n                loading : false, \n                products : action.payload.products,\n                page : action.payload.page,\n                pages : action.payload.pages,\n\n            };\n        case PRODUCT_LIST_FAIL:\n            return {\n                ...state,\n                loading : false, \n                error : action.payload\n             };\n        default:\n            return state;\n    }\n};\n\nexport default productsListReducer;\n\n\n","export const PRODUCT_LIST_REQUEST =  'PRODUCT_LIST_REQUEST';\nexport const PRODUCT_LIST_SUCCESS =  'PRODUCT_LIST_SUCCESS';\nexport const PRODUCT_LIST_FAIL =  'PRODUCT_LIST_FAIL';\n\n\nexport const PRODUCT_DETAIL_REQUEST =  'PRODUCT_DETAIL_REQUEST';\nexport const PRODUCT_DETAIL_SUCCESS =  'PRODUCT_DETAIL_SUCCESS';\nexport const PRODUCT_DETAIL_FAIL =  'PRODUCT_DETAIL_FAIL';\n\nexport const PRODUCT_CREATE_REQUEST =  'PRODUCT_CREATE_REQUEST';\nexport const PRODUCT_CREATE_SUCCESS =  'PRODUCT_CREATE_SUCCESS';\nexport const PRODUCT_CREATE_FAIL =  'PRODUCT_CREATE_FAIL';\nexport const PRODUCT_CREATE_RESET =  'PRODUCT_CREATE_RESET';\n\nexport const PRODUCT_UPDATE_REQUEST =  'PRODUCT_UPDATE_REQUEST';\nexport const PRODUCT_UPDATE_SUCCESS =  'PRODUCT_UPDATE_SUCCESS';\nexport const PRODUCT_UPDATE_FAIL =  'PRODUCT_UPDATE_FAIL';\nexport const PRODUCT_UPDATE_RESET =  'PRODUCT_UPDATE_RESET';\n\nexport const PRODUCT_DELETE_REQUEST =  'PRODUCT_DELETE_REQUEST';\nexport const PRODUCT_DELETE_SUCCESS =  'PRODUCT_DELETE_SUCCESS';\nexport const PRODUCT_DELETE_FAIL =  'PRODUCT_DELETE_FAIL';\n\nexport const REVIEW_CREATE_REQUEST =  'REVIEW_CREATE_REQUEST';\nexport const REVIEW_CREATE_SUCCESS =  'REVIEWCREATE_SUCCESS';\nexport const REVIEW_CREATE_FAIL =  'REVIEW_CREATE_FAIL';\nexport const REVIEW_CREATE_RESET =  'REVIEW_CREATE_RESET';\n\nexport const PRODUCT_TOP_REQUEST =  'PRODUCT_TOP_REQUEST';\nexport const PRODUCT_TOP_SUCCESS =  'PRODUCT_TOP_SUCCESS';\nexport const PRODUCT_TOP_FAIL =  'PRODUCT_TOP_FAIL';\nexport const PRODUCT_TOP_RESET =  'PRODUCT_TOP_RESET';\n","\nimport { PRODUCT_DETAIL_REQUEST, PRODUCT_DETAIL_SUCCESS,  PRODUCT_DETAIL_FAIL} from '../actionTypes/productActionTypes';\n\nconst initialStateProduct = {\n    loading : false,\n    product : {},\n    error : false\n};\n\nconst productDetailReducer = (state = initialStateProduct, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAIL_REQUEST:\n            return { \n                ...state,\n                loading : true , \n            };\n        case PRODUCT_DETAIL_SUCCESS:\n            return { \n                ...state,\n                loading : false, \n                product : action.payload \n            };\n        case PRODUCT_DETAIL_FAIL:\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n             };\n        default:\n            return state;\n    }\n};\n\nexport default productDetailReducer;\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIIPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../actionTypes/cartActionTypes';\n\nconst initialState = {\n    cartItems : [],\n    shippingAddress : {}\n}\n\nconst cartReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n\n            const existItem = state.cartItems.find(element => element.product === item.product)\n\n            if(existItem){\n                return {\n                    ...state,\n                    cartItems : state.cartItems.map(element => element.product === existItem.product ? item : element)\n                }\n            }else {\n                return {\n                    ...state, \n                    cartItems : [...state.cartItems, item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems : state.cartItems.filter(item => item.product !== action.payload )\n            }  \n        case CART_SAVE_SHIIPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress : action.payload\n            } \n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod : action.payload\n            }    \n        default:\n            return state;\n    }\n}\n\nexport default cartReducer;","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\nexport const CART_SAVE_SHIIPING_ADDRESS ='CART_SAVE_SHIIPING_ADDRESS';\nexport const CART_SAVE_PAYMENT_METHOD ='CART_SAVE_PAYMENT_METHOD';","import { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT} from '../actionTypes/userActionTypes'\n\nconst initialState = {\n    loading : false,\n    userInfo : {},\n    error : false\n}\n\nconst userLoginReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case  USER_LOGIN_REQUEST :\n            return {\n                ...state,\n                loading : true\n            }\n        case  USER_LOGIN_SUCCESS :\n            return {\n                ...state,\n                loading : false,\n                userInfo : action.payload\n            }\n        case  USER_LOGIN_FAIL :\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n            }\n        case  USER_LOGOUT :\n            return {}\n        default:\n            return state;\n    }\n}\n\nexport default userLoginReducer ","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n\n// ADMIN ACTIONS\n\nexport const USERS_LIST_REQUEST = 'USERS_LIST_REQUEST'\nexport const USERS_LIST_SUCCESS = 'USERS_LIST_SUCCESS'\nexport const USERS_LIST_FAIL = 'USERS_LIST_FAIL'\nexport const USERS_LIST_RESET = 'USERS_LIST_RESET'\n\nexport const USER_UPDATE_ADMIN_REQUEST = 'USER_UPDATE_ADMIN_REQUEST'\nexport const USER_UPDATE_ADMIN_SUCCESS = 'USER_UPDATE_ADMIN_SUCCESS'\nexport const USER_UPDATE_ADMIN_FAIL = 'USER_UPDATE_ADMIN_FAIL'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'","import { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from '../actionTypes/userActionTypes'\n\nconst initialState = {\n    loading : false,\n    userInfo : {},\n    error : false\n}\n\nconst userRegisterReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case  USER_REGISTER_REQUEST :\n            return {\n                ...state,\n                loading : true\n            }\n        case  USER_REGISTER_SUCCESS :\n            return {\n                ...state,\n                loading : false,\n                userInfo : action.payload\n            }\n        case  USER_REGISTER_FAIL :\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default userRegisterReducer ","import { USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_RESET } from '../actionTypes/userActionTypes'\n\nconst initialState = {\n    loading : false,\n    user : {},\n    error : false\n}\n\nconst userDetailsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case  USER_DETAILS_REQUEST :\n            return {\n                ...state,\n                loading : true\n            }\n        case  USER_DETAILS_SUCCESS :\n            return {\n                ...state,\n                loading : false,\n                user : action.payload\n            }\n        case  USER_DETAILS_FAIL :\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n            }\n        case  USER_DETAILS_RESET :\n            return {\n                ...state,\n                user : {}\n            }\n        default:\n            return state;\n    }\n}\n\nexport default userDetailsReducer ","import { USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET } from '../actionTypes/userActionTypes'\n\nconst initialState = {\n    loading : false,\n    userInfo : {},\n    success : false,\n    error : false\n}\n\nconst userUpdateReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case  USER_UPDATE_REQUEST :\n            return {\n                ...state,\n                loading : true\n            }\n        case  USER_UPDATE_SUCCESS :\n            return {\n                ...state,\n                success : true,\n                loading : false,\n                userInfo : action.payload\n            }\n        case  USER_UPDATE_FAIL :\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n            }\n        case  USER_UPDATE_RESET :\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport default userUpdateReducer ","import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL } from '../actionTypes/orderActionTypes'\n\nconst initialState = { \n    loading : false,\n    success : false,\n    order : {},\n    error : false\n}\n\nconst orderCreateReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ORDER_CREATE_REQUEST:\n            return {\n                ...state,\n                loading : true\n            }\n        case ORDER_CREATE_SUCCESS:\n            return {\n                ...state,\n                loading : false,\n                success : true,\n                order : action.payload\n            }\n        case ORDER_CREATE_FAIL:\n            return {\n                ...state,\n                loading : false,\n                error : action.payload,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default orderCreateReducer","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n\nexport const ORDERS_REQUEST = 'ORDERS_REQUEST'\nexport const ORDERS_SUCCESS = 'ORDERS_SUCCESS'\nexport const ORDERS_FAIL = 'ORDERS_FAIL'\nexport const ORDERS_RESET = 'ORDERS_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'","\nimport { ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL} from '../actionTypes/orderActionTypes';\n\nconst initialStateOrder = {\n    loading : true,\n    // orderItems : [],\n    shippingAddress : {},\n    order : {\n        _id:\"\",\n        taxPrice:0,\n        shippingPrice:0,\n        totalPrice:0,\n        isPaid :false,\n        user:\"\",\n        orderItems:[],\n        shippingAddress:\n            {  \n                address:\"\",\n                city:\"\",\n                postalCode:\"\",\n                country:\"\"\n            },\n        paymentMethod:true\n        },\n    error : false\n};\n\nconst orderDetailsReducer = (state = initialStateOrder, action) => {\n    switch (action.type) {\n        case ORDER_DETAILS_REQUEST:\n            return { \n                ...state,\n                loading : true, \n            };\n        case ORDER_DETAILS_SUCCESS:\n            return { \n                ...state,\n                loading : false, \n                order : action.payload, \n            };\n        case ORDER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n             };\n        default:\n            return state;\n    }\n};\n\nexport default orderDetailsReducer;\n","import { ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_PAY_RESET } from '../actionTypes/orderActionTypes'\n\nconst initialState = { \n    loading : false,\n    success : false,\n    error : false\n}\n\nconst orderPayReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ORDER_PAY_REQUEST:\n            return {\n                loading : true\n            }\n        case ORDER_PAY_SUCCESS:\n            return {\n                loading : false,\n                success : true,\n            }\n        case ORDER_PAY_FAIL:\n            return {\n                loading : false,\n                error : action.payload,\n            }\n        case ORDER_PAY_RESET:\n            return {}\n        default:\n            return state;\n    }\n}\n\nexport default orderPayReducer","import { ORDERS_FAIL, ORDERS_REQUEST, ORDERS_RESET, ORDERS_SUCCESS } from \"../actionTypes/orderActionTypes\";\n\n// const emptyOrder = {\n//     shippingAddress: {\n//         address: \"\",\n//         city: \"\",\n//         postalCode: \"\",\n//         country: \"\"\n//     },\n//     taxPrice: 0,\n//     shippingPrice: 0,\n//     totalPrice: 0,\n//     isPaid: false,\n//     _id: \"\",\n//     user: \"\",\n//     paymentMethod: true,\n//     createdAt: \"2021-06-23T14:06:32.948Z\",\n//     updatedAt: \"2021-06-23T14:06:32.948Z\",\n// }\n\nconst initialState = {\n    loading : true, \n    orders : [],\n    error : ''\n}\n\nconst ordersReducer = ( state = initialState, action) => {\n    switch (action.type) {\n        case ORDERS_REQUEST:\n            return {\n                ...state,\n                loading : true\n            }\n        case ORDERS_SUCCESS:\n            return {\n                ...state,\n                loading : false,\n                orders : action.payload\n            }\n        case ORDERS_FAIL:\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n            }\n        case ORDERS_RESET:\n            return {\n                ...state,\n                orders : []\n            }\n        default:\n            return state\n    }\n}\n\nexport default ordersReducer","import { USERS_LIST_FAIL, USERS_LIST_REQUEST, USERS_LIST_RESET, USERS_LIST_SUCCESS } from \"../actionTypes/userActionTypes\";\n\n\nconst usersListReducer = (state = { users : [] } , action) => {\n    switch (action.type) {\n        case USERS_LIST_REQUEST:\n            return {\n                loading : true\n            }\n        case USERS_LIST_SUCCESS:\n        return {\n            loading : false,\n            users : action.payload\n        }\n        case USERS_LIST_FAIL:\n            return {\n                loading : false,\n                error : action.payload\n            }\n        case USERS_LIST_RESET:\n            return {\n                users : []\n            }\n        default:\n            return state\n    }\n}\n\nexport default usersListReducer","import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS } from \"../actionTypes/userActionTypes\";\n\n\nconst userDeleteReducer = (state = { user : {}} , action) => {\n    switch (action.type) {\n        case USER_DELETE_REQUEST:\n            return {\n                loading : true\n            }\n        case USER_DELETE_SUCCESS:\n        return {\n            loading : false,\n            user : action.payload\n        }\n        case USER_DELETE_FAIL:\n            return {\n                loading : false,\n                error : action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default userDeleteReducer","import { USER_UPDATE_ADMIN_FAIL, USER_UPDATE_ADMIN_REQUEST, USER_UPDATE_ADMIN_SUCCESS } from \"../actionTypes/userActionTypes\";\n\n\nconst userUpdateAdminReducer = (state = { user : {}} , action) => {\n    switch (action.type) {\n        case USER_UPDATE_ADMIN_REQUEST:\n            return {\n                loading : true\n            }\n        case USER_UPDATE_ADMIN_SUCCESS:\n        return {\n            loading : false,\n            user : action.payload\n        }\n        case USER_UPDATE_ADMIN_FAIL:\n            return {\n                loading : false,\n                error : action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default userUpdateAdminReducer","\nimport { PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS } from '../actionTypes/productActionTypes';\n\n\n\nconst productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { \n                ...state,\n                loading : true , \n            };\n        case PRODUCT_DELETE_SUCCESS:\n            return { \n                ...state,\n                loading : false, \n                success : action.payload \n            };\n        case PRODUCT_DELETE_FAIL:\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n             };\n        default:\n            return state;\n    }\n};\n\nexport default productDeleteReducer;\n","\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_RESET, PRODUCT_CREATE_SUCCESS } from '../actionTypes/productActionTypes';\n\nconst initialStateProduct = {\n    loading : false,\n    product : {},\n    error : false\n};\n\nconst productCreateReducer = (state = initialStateProduct, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { \n                ...state,\n                loading : true , \n            };\n        case PRODUCT_CREATE_SUCCESS:\n            return { \n                ...state,\n                loading : false, \n                product : action.payload,\n                success : true\n            };\n        case PRODUCT_CREATE_FAIL:\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n             };\n        case PRODUCT_CREATE_RESET:\n            return {} ;\n        default:\n            return state;\n    }\n};\n\nexport default productCreateReducer;\n","\nimport { PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_RESET, PRODUCT_UPDATE_SUCCESS } from '../actionTypes/productActionTypes';\n\nconst initialStateProduct = {\n    loading : false,\n    product : {},\n    error : false,\n    success : false\n};\n\nconst productUpdateReducer = (state = initialStateProduct, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { \n                ...state,\n                loading : true , \n            };\n        case PRODUCT_UPDATE_SUCCESS:\n            return { \n                ...state,\n                loading : false, \n                product : action.payload,\n                success : true\n            };\n        case PRODUCT_UPDATE_FAIL:\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n             };\n        case PRODUCT_UPDATE_RESET:\n            return {} ;\n        default:\n            return state;\n    }\n};\n\nexport default productUpdateReducer;\n","\nimport { ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS } from '../actionTypes/orderActionTypes';\n\nconst orderListReducer = (state = { orders : []}, action) => {\n    switch (action.type) {\n        case ORDER_LIST_REQUEST:\n            return { \n                ...state,\n                loading : true, \n            };\n        case ORDER_LIST_SUCCESS:\n            return { \n                ...state,\n                loading : false, \n                orders : action.payload, \n            };\n        case ORDER_LIST_FAIL:\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n             };\n        default:\n            return state;\n    }\n};\n\nexport default orderListReducer;\n","import { ORDER_DELIVER_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_RESET, ORDER_DELIVER_SUCCESS } from '../actionTypes/orderActionTypes'\n\nconst initialState = { \n    loading : false,\n    success : false,\n    error : false\n}\n\nconst orderDeliverReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ORDER_DELIVER_REQUEST:\n            return {\n                loading : true\n            }\n        case ORDER_DELIVER_SUCCESS:\n            return {\n                loading : false,\n                success : true,\n            }\n        case ORDER_DELIVER_FAIL:\n            return {\n                loading : false,\n                error : action.payload,\n            }\n        case ORDER_DELIVER_RESET:\n            return {}\n        default:\n            return state;\n    }\n}\n\nexport default orderDeliverReducer","import { REVIEW_CREATE_REQUEST, REVIEW_CREATE_SUCCESS, REVIEW_CREATE_FAIL, REVIEW_CREATE_RESET } from '../actionTypes/productActionTypes';\n\nconst reviewCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case REVIEW_CREATE_REQUEST:\n            return { \n                ...state,\n                loading : true , \n            };\n        case REVIEW_CREATE_SUCCESS:\n            return { \n                ...state,\n                loading : false, \n                success : true\n            };\n        case REVIEW_CREATE_FAIL:\n            return {\n                ...state,\n                loading : false,\n                error : action.payload\n             };\n        case REVIEW_CREATE_RESET:\n            return {} ;\n        default:\n            return state;\n    }\n};\n\nexport default reviewCreateReducer;","import { PRODUCT_TOP_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS } from '../actionTypes/productActionTypes';\n\nconst initialStateProducts = {\n    loading : false,\n    products : [],\n    error : false\n};\n\nconst productTopRatingReducer = (state = initialStateProducts, action) => {\n    switch (action.type) {\n        case PRODUCT_TOP_REQUEST:\n            return { \n                ...state,\n                loading : true , \n            };\n        case PRODUCT_TOP_SUCCESS:\n            return { \n                ...state,\n                loading : false, \n                products : action.payload,\n\n            };\n        case PRODUCT_TOP_FAIL:\n            return {\n                ...state,\n                loading : false, \n                error : action.payload\n             };\n        default:\n            return state;\n    }\n};\n\nexport default productTopRatingReducer;\n\n\n","import { combineReducers } from 'redux';\nimport productsListReducer from './productsListReducer';\nimport  productDetailReducer from './productDetailReducer'\nimport cartReducer from './cartReducer'\nimport userLoginReducer from './userLoginReducer'\nimport userRegisterReducer from './userRegisterReducer'\nimport userDetailsReducer from './userDetailReducer'\nimport userUpdateReducer from './userUpdateReducer'\nimport orderCreateReducer from './orderCreateReducer'\nimport orderDetailsReducer from './orderDetailsReducer'\nimport orderPayReducer from './orderPayReducer'\nimport ordersReducer from './ordersReducer';\nimport usersListReducer from './adminUserListReducer';\nimport userDeleteReducer from './adminUserDeleteReducer';\nimport userUpdateAdminReducer from './adminUserUpdateReducer';\nimport productDeleteReducer from './productDeleteReducer';\nimport productCreateReducer from './productCreateReducer'\nimport productUpdateReducer from './productUpdateReducer';\nimport orderListReducer from './orderListReducer';\nimport orderDeliverReducer from './orderDeliverReducer';\nimport reviewCreateReducer from './reviewCreateReducer';\nimport productTopRatingReducer from './productTopReducer';\n\nconst rootReducer = combineReducers({\n    productList : productsListReducer,\n    productDetail : productDetailReducer,\n    productDelete : productDeleteReducer,\n    productCreate : productCreateReducer,\n    productUpdate : productUpdateReducer,\n    productTopRating : productTopRatingReducer,\n    cart : cartReducer,\n    userLogin : userLoginReducer,\n    userRegister : userRegisterReducer,\n    userDetails : userDetailsReducer,\n    userUpdate : userUpdateReducer,\n    usersList : usersListReducer ,\n    userDelete : userDeleteReducer,\n    userUpdateAdmin : userUpdateAdminReducer,\n    orderCreate : orderCreateReducer,\n    orderDetails : orderDetailsReducer,\n    orderPay : orderPayReducer,\n    orderDeliver : orderDeliverReducer,\n    ordersMyList : ordersReducer,\n    orderList : orderListReducer,\n    reviewCreate : reviewCreateReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware  } from 'redux';\nimport  thunk  from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducer/index'\n\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems') ) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : 'Paypal'\n\n\nconst initialState = {\n    cart : { cartItems : cartItemFromStorage, shippingAddress :  shippingAddressFromStorage, paymentMethod : paymentMethodFromStorage},\n    userLogin : { userInfo : userInfoFromStorage }\n};\nconst middleware = [thunk]\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store;","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst SearchBox = ({history}) => {\n\n    const [ keyword, setKeyword ] = useState('')\n\n    const submitHandler = event => {\n        event.preventDefault()\n        if(keyword.trim()){\n            history.push(`/search/${keyword}`)\n        } else {\n            history.push('/')\n        }\n    }\n    return (\n        <Form onSubmit = { submitHandler} inline>\n            <Form.Control type='text' value={keyword} placeholder=\"Search product...\" name='q' className='mr-sm-2 ml-sm-5' onChange={e => setKeyword(e.target.value)}></Form.Control>\n            <Button type='submit'  vairant='outline-success' className='p-2'>Search</Button>\n        </Form>\n    )\n}\n\nexport default SearchBox\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport {  Navbar, Nav, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {  logoutUser  } from '../redux/actions/userActions'\nimport SearchBox from './SearchBox'\n\nconst Header = () => {\n\n    const dispatch = useDispatch()\n    \n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const logoutHandler = () => {\n        dispatch(logoutUser());\n    }\n\n\treturn <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" className=\"px-3\">\n                <LinkContainer to=\"/\">\n                    <Navbar.Brand>IntelliJ-shop</Navbar.Brand> \n                </LinkContainer>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Route render={({history}) => <SearchBox history={history} />} />\n                    <Nav className=\"ml-auto\">\n                    <LinkContainer to=\"/cart\">\n                        <Nav.Link> <i className=\"fas fa-shopping-cart mr-1\"></i>Cart</Nav.Link>\n                    </LinkContainer>\n                   {\n                       userInfo ? (\n                           <NavDropdown title={userInfo.name} id='username'>\n                               <LinkContainer to='/profile'>\n                                   <NavDropdown.Item>Profil</NavDropdown.Item>\n                               </LinkContainer>\n                               <NavDropdown.Item onClick={logoutHandler}>Log out</NavDropdown.Item>\n                           </NavDropdown>\n                       ): \n                       <LinkContainer to=\"/login\">\n                            <Nav.Link><i className=\"fas fa-user mr-1\"></i>Sign in</Nav.Link>\n                        </LinkContainer>\n                   }\n                   {\n                       userInfo && userInfo.isAdmin && (\n                        <NavDropdown title=\"Admin\" id='admin'>\n                        <LinkContainer to='/admin/user-list'>\n                            <NavDropdown.Item>User List</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to='/admin/product-list'>\n                            <NavDropdown.Item>Product List</NavDropdown.Item>\n                        </LinkContainer>\n                        <LinkContainer to='/admin/order-list'>\n                            <NavDropdown.Item>Order List</NavDropdown.Item>\n                        </LinkContainer>\n                    </NavDropdown>\n                       )\n                   }\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar> \n    </header>\n}\n\nexport default Header\n","import axios from 'axios';\nimport { ORDERS_RESET } from '../actionTypes/orderActionTypes';\nimport { USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_DETAILS_RESET, USERS_LIST_REQUEST, USERS_LIST_SUCCESS, USERS_LIST_FAIL, USERS_LIST_RESET, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL, USER_UPDATE_ADMIN_REQUEST, USER_UPDATE_ADMIN_SUCCESS, USER_UPDATE_ADMIN_FAIL } from '../actionTypes/userActionTypes';\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from '../actionTypes/userActionTypes';\nimport { USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL } from '../actionTypes/userActionTypes';\nimport { USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL } from '../actionTypes/userActionTypes'\n\nexport const loginUser = (email, password) => async(dispatch) => {\n    try {\n        dispatch({ type : USER_LOGIN_REQUEST})\n\n        const config = {\n            headers : {\n                'Content-Type' : 'application/json'\n            }\n        }\n\n        const res = await axios.post('http://localhost:5000/api/users/login', { email, password}, config)\n\n        const { data } = res\n\n        dispatch({\n            type : USER_LOGIN_SUCCESS,\n            payload : data\n        })\n\n        console.log(data)\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n        \n    } catch (error) {\n        dispatch({\n            type : USER_LOGIN_FAIL,\n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const logoutUser = () => dispatch => {\n\n    localStorage.removeItem('userInfo');\n    dispatch({ type : USER_LOGOUT });\n    dispatch({ type : ORDERS_RESET });\n    dispatch({ type : USER_DETAILS_RESET });\n    dispatch({ type : USERS_LIST_RESET });\n}\nexport const registerUser = (name, email, password) => async(dispatch) => {\n\n    try {\n            dispatch({ type : USER_REGISTER_REQUEST })\n\n            const config = {\n                headers : {\n                    'Content-Type' : 'application/json'\n                }\n            }\n    \n            const res = await axios.post('http://localhost:5000/api/users', { name, email, password}, config)\n    \n            const { data } = res\n    \n            dispatch({\n                type : USER_REGISTER_SUCCESS,\n                payload : data\n            })\n    \n            dispatch({\n                type : USER_LOGIN_SUCCESS,\n                payload : data\n            })\n    \n            localStorage.setItem('userInfo', JSON.stringify(data))\n            \n        } catch (error) {\n            console.log('THIS IS THE ERROR ', error)\n            dispatch({\n                type : USER_REGISTER_FAIL,\n                payload : error.response && error.response.data.message ? error.response.data.message : error.message\n            })\n        }\n}\nexport const getUserDetail = id => async(dispatch, getState ) => {\n\n    try {\n            dispatch({ type : USER_DETAILS_REQUEST })\n\n            const { userLogin : { userInfo } } = getState()\n\n            const config = {\n                headers : {\n                    'Content-Type' : 'application/json',\n                    Authorization :  `Bearer ${userInfo.token}`\n                }\n            }\n    \n            const res = await axios.get(`http://localhost:5000/api/users/${id}`, config)\n    \n            const { data } = res\n    \n            dispatch({\n                type : USER_DETAILS_SUCCESS,\n                payload : data\n            })\n            \n        } catch (error) {\n            console.log('THIS IS THE ERROR ', error)\n            dispatch({\n                type : USER_DETAILS_FAIL,\n                payload : error.response && error.response.data.message ? error.response.data.message : error.message\n            })\n        }\n}\nexport const updateUserProfil= user => async(dispatch, getState ) => {\n\n    try {\n            dispatch({ type : USER_UPDATE_REQUEST })\n\n            const { userLogin : { userInfo } } = getState()\n\n            const config = {\n                headers : {\n                    'Content-Type' : 'application/json',\n                    Authorization :  `Bearer ${userInfo.token}`\n                }\n            }\n    \n            const res = await axios.put('http://localhost:5000/api/users/profile', user, config)\n    \n            const { data } = res\n    \n            dispatch({\n                type : USER_UPDATE_SUCCESS,\n                payload : data\n            })\n            \n        } catch (error) {\n            console.log('THIS IS THE ERROR ', error)\n            dispatch({\n                type : USER_UPDATE_FAIL,\n                payload : error.response && error.response.data.message ? error.response.data.message : error.message\n            })\n        }\n}\n\n\n// ADMIN ACTIONS \n\nexport const getUsersList = () => async(dispatch, getState ) => {\n\n    try {\n            dispatch({ type : USERS_LIST_REQUEST})\n\n            const { userLogin : { userInfo } } = getState()\n\n            const config = {\n                headers : {\n                    Authorization :  `Bearer ${userInfo.token}`\n                }\n            }\n    \n            const res = await axios.get('http://localhost:5000/api/users/', config)\n    \n            const { data } = res\n    \n            dispatch({\n                type : USERS_LIST_SUCCESS,\n                payload : data\n            })\n            \n        } catch (error) {\n            console.log('THIS IS THE ERROR ', error)\n            dispatch({\n                type : USERS_LIST_FAIL,\n                payload : error.response && error.response.data.message ? error.response.data.message : error.message\n            })\n        }\n}\nexport const updateUserAdmin= (user, id) => async(dispatch, getState ) => {\n\n    try {\n            dispatch({ type : USER_UPDATE_ADMIN_REQUEST })\n\n            const { userLogin : { userInfo } } = getState()\n\n            const config = {\n                headers : {\n                    'Content-Type' : 'application/json',\n                    Authorization :  `Bearer ${userInfo.token}`\n                }\n            }\n    \n            const res = await axios.put(`http://localhost:5000/api/users/${id}`, user, config)\n    \n            const { data } = res\n    \n            dispatch({\n                type : USER_UPDATE_ADMIN_SUCCESS,\n                payload : data\n            })\n            \n        } catch (error) {\n            console.log('THIS IS THE ERROR ', error)\n            dispatch({\n                type : USER_UPDATE_ADMIN_FAIL,\n                payload : error.response && error.response.data.message ? error.response.data.message : error.message\n            })\n        }\n}\nexport const deleteUser = id => async(dispatch, getState ) => {\n\n    try {\n            dispatch({ type : USER_DELETE_REQUEST })\n\n            const { userLogin : { userInfo } } = getState()\n\n            const config = {\n                headers : {\n                    Authorization :  `Bearer ${userInfo.token}`\n                }\n            }\n    \n            const res = await axios.delete(`http://localhost:5000/api/users/${id}`, config)\n    \n            const { data } = res\n    \n            dispatch({\n                type : USER_DELETE_SUCCESS,\n                payload : data\n            })\n            \n        } catch (error) {\n            console.log('THIS IS THE ERROR ', error)\n            dispatch({\n                type : USER_DELETE_FAIL,\n                payload : error.response && error.response.data.message ? error.response.data.message : error.message\n            })\n        }\n}\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n\treturn <footer> \n        <Container>\n            <Row>\n                <Col className=\"text-center py-3\">  Copyright &copy;2020 IntelliJ-Shop</Col>\n            </Row>\n        </Container>\n    </footer>\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = props => {\n    const { rating, numReviews, color } = props\n    return (\n        <div className=\"py-2\">\n            <span>\n                <i style={{color}} className={rating >= 1 ? \"fas fa-star\" : rating >=0.5 ? \"fas fa-star-half-alt\" : \"far fa-star\"}></i>\n            </span>\n            <span>\n                <i style={{color}} className={rating >= 2 ? \"fas fa-star\" : rating >=1.5 ? \"fas fa-star-half-alt\" : \"far fa-star\"}></i>\n            </span>\n            <span>\n                <i style={{color}} className={rating >= 3 ? \"fas fa-star\" : rating >=2.5 ? \"fas fa-star-half-alt\" : \"far fa-star\"}></i>\n            </span>\n            <span>\n                <i style={{color}} className={rating >= 4 ? \"fas fa-star\" : rating >=3.5 ? \"fas fa-star-half-alt\" : \"far fa-star\"}></i>\n            </span>\n            <span>\n                <i style={{color}} className={rating >= 5 ? \"fas fa-star\" : rating >=4.5 ? \"fas fa-star-half-alt\" : \"far fa-star\"}></i>\n            </span>\n            <span className=\"px-1\">{rating} from {numReviews} reviews</span>\n        </div>\n    )\n}\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Rating from './Rating'\n\nconst Product = ({product}) => {\n    const { name, image, numReviews, rating, price, _id } = product \n    return (\n        <Card style={{ width: '16rem' }} className=\"my-3 p-2 rounded\">\n           <Link to={`products/${_id}`}>\n            <Card.Img variant=\"top\" src={image} />   \n           </Link>\n            <Card.Body>\n                <Link to={`products/${_id}`}>\n                    <Card.Title>{name}</Card.Title>\n               </Link>\n                <Card.Text>\n                    <Rating \n                        rating={rating} \n                        numReviews={numReviews}\n                        color=\"#f8e825\"\n                     />\n                </Card.Text>\n                <Card.Text as=\"h5\">R{price}</Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default Product\n","import axios from 'axios';\nimport { \n    PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS,  \n    PRODUCT_LIST_FAIL, \n    PRODUCT_DETAIL_REQUEST, \n    PRODUCT_DETAIL_SUCCESS,  \n    PRODUCT_DETAIL_FAIL, \n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    REVIEW_CREATE_REQUEST,\n    REVIEW_CREATE_SUCCESS,\n    REVIEW_CREATE_FAIL,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n} \nfrom '../actionTypes/productActionTypes';\n\n\nexport const fetchProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\n    try {\n\n        dispatch({ type : PRODUCT_LIST_REQUEST});\n\n        const  { data }  = await axios.get(`http://localhost:5000/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\n\n        dispatch({ \n            type : PRODUCT_LIST_SUCCESS, \n            payload : data \n        })\n        \n    } catch (error) {\n        dispatch({ \n            type : PRODUCT_LIST_FAIL, \n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const fetchProduct = (id) => async (dispatch) => {\n\n    try {\n        dispatch({ type : PRODUCT_DETAIL_REQUEST})\n\n        const { data } = await axios.get(`http://localhost:5000/api/products/${id}`)\n\n        dispatch({\n            type : PRODUCT_DETAIL_SUCCESS,\n            payload : data\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : PRODUCT_DETAIL_FAIL,\n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const createProduct = () => async (dispatch, getState) => {\n\n    try {\n        dispatch({ type : PRODUCT_CREATE_REQUEST})\n\n        const { userLogin : { userInfo } } = getState()\n\n        const config = {\n            headers : {\n                'Content-Type' : 'application/json',\n                Authorization :  `Bearer ${userInfo.token}`\n            }\n        }\n\n        const {data} = await axios.post('http://localhost:5000/api/products/', {}, config)        \n\n        dispatch({\n            type : PRODUCT_CREATE_SUCCESS,\n            payload : data\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : PRODUCT_CREATE_FAIL,\n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const updateProduct = (product, id) => async (dispatch, getState) => {\n\n    try {\n        dispatch({ type : PRODUCT_UPDATE_REQUEST})\n\n        const { userLogin : { userInfo } } = getState()\n\n        const config = {\n            headers : {\n                'Content-Type' : 'application/json',\n                Authorization :  `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.put(`http://localhost:5000/api/products/${id}`, product, config)        \n\n        dispatch({\n            type : PRODUCT_UPDATE_SUCCESS,\n            payload : data\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : PRODUCT_UPDATE_FAIL,\n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n\n    try {\n        dispatch({ type : PRODUCT_DELETE_REQUEST})\n\n        const { userLogin : { userInfo } } = getState()\n\n        const config = {\n            headers : {\n                Authorization :  `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.delete(`http://localhost:5000/api/products/${id}`, config)\n\n        dispatch({\n            type : PRODUCT_DELETE_SUCCESS,\n            payload : true\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : PRODUCT_DELETE_FAIL,\n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const listTopProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type : PRODUCT_TOP_REQUEST});\n\n        const  { data }  = await axios.get(`http://localhost:5000/api/products/top`)\n\n        dispatch({ \n            type : PRODUCT_TOP_SUCCESS, \n            payload : data \n        })\n        \n    } catch (error) {\n        dispatch({ \n            type : PRODUCT_TOP_FAIL, \n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\n\nexport const createProductReview = ( id, review) => async (dispatch, getState) => {\n\n    try {\n        dispatch({ type : REVIEW_CREATE_REQUEST})\n\n        const { userLogin : { userInfo } } = getState()\n\n        const config = {\n            headers : {\n                'Content-Type' : 'application/json',\n                Authorization :  `Bearer ${userInfo.token}`\n            }\n        }\n\n        await axios.post(`http://localhost:5000/api/products/${id}/reviews`, review, config)        \n\n        dispatch({\n            type : REVIEW_CREATE_SUCCESS,\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : REVIEW_CREATE_FAIL,\n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner \n            animation=\"border\" \n            variant=\"dark\" \n            style={{\n                width : \"100px\", \n                height : \"100px\", \n                margin : \"auto\", \n                display : \"block\"}\n            }>\n            <span className=\"sr-only\"> Loading</span>\n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({variant, children }) => {\n    return (\n        <Alert variant={variant}>\n            { children }\n        </Alert>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({pages, page, keyword, isAdmin=false}) => {\n    return  pages > 1 && (\n        <Pagination>\n            {\n                [...Array(pages).keys()].map( x => (\n                    <LinkContainer key={x + 1} to={ !isAdmin ? keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}` : `/admin/product-list/${x + 1}`}>\n                        <Pagination.Item active={x+1 === page}>{x + 1}</Pagination.Item>\n                    </LinkContainer>\n                ))\n            }\n        </Pagination>\n    )\n}\n\nexport default Paginate\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../redux/actions/productActions'\n\n\nconst ProductCarousel = () => {\n    \n    const dispatch = useDispatch()\n\n    const productTopRating = useSelector(state => state.productTopRating)\n    const { loading , error, products } = productTopRating\n\n    useEffect(() => {\n        dispatch(listTopProducts())\n    }, [dispatch])\n\n    return (\n        \n            loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : (\n                    <Carousel pause='hover' className='bg-dark'>\n                        {\n                            products.map(product => (\n                                <Carousel.Item key={product._id}>\n                                    <Link to={`/product/${product._id}`}>\n                                        <Image src={product.image} alt={product.name} fluid/>\n                                        <Carousel.Caption className=\"carousel-caption\">\n                                            <h2>{product.name} $({product.price})</h2>\n                                        </Carousel.Caption>\n                                    </Link>\n                                </Carousel.Item>\n                            ))\n                        }\n                    </Carousel>\n            )\n    )\n\n}\n\nexport default ProductCarousel\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector  } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Helmet } from 'react-helmet'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport { fetchProducts } from '../redux/actions/productActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\n\nconst HomePage = ({match}) => {\n\n    const keyword = match.params.keyword\n    const pageNumber = match.params.pageNumber || 1\n    const dispatch = useDispatch();\n\n    const productList = useSelector(state => state.productList);\n\n    const { loading, error, products, pages , page } = productList;\n    \n    useEffect(() => {\n        \n        dispatch(fetchProducts(keyword, pageNumber));\n        \n    }, [dispatch, keyword, pageNumber])\n\n    return (\n        <>\n            <Helmet>\n                <title> Welcome IntelliJ Shop | Home </title>\n                <meta name='description' content='We bring the best products to your home'/>\n                <meta name='keywords' content='electronics, buy electronics, cheap electronics'/>\n            </Helmet>\n            {\n                !keyword ? <ProductCarousel /> : <Link to='/' className='btn btn-light'>Go Back</Link>\n            }\n            <h2>Latest products</h2>\n            {\n                loading ? \n                    <Loader/> : error ? \n                    <Message variant=\"danger\" children={error} /> : \n                    (\n                    <>\n                        <Row>\n                            {\n                                products.map(product => (\n                                    <Col sm={3} md={6} lg={4} xl={3} key={product._id}>\n                                        <Product product={product}/>\n                                    </Col>\n                                ))\n                            }\n                        </Row>  \n                        <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''} />\n                    </>\n                    )\n            }\n        </>\n    )\n}\n\nexport default HomePage\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description , keyword}) => {\n    return (\n        <Helmet>\n            <title>{title}</title>\n            <meta name='description' content={description} />\n            <meta name='keywords' content={keyword} />\n        </Helmet>\n    )\n}\n\nexport default Meta\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport { fetchProduct, createProductReview } from '../redux/actions/productActions'\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { REVIEW_CREATE_RESET } from '../redux/actionTypes/productActionTypes'\nimport Meta from '../components/Meta'\n\n\nconst ProductPage = props => {\n\n    const productId = props.match.params.id\n\n    const [ qty , setQty ] = useState(1);\n    const [ reviewRating , setRating ] = useState(0);\n    const [ reviewComment , setComment ] = useState('');\n\n    const dispatch = useDispatch()\n\n    const productDetail = useSelector(state => state.productDetail)\n    const { error, loading, product } = productDetail\n\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo} = userLogin\n\n    const reviewCreate = useSelector(state => state.reviewCreate)\n    const { error : reviewCreateError, success : reviewCreateSuccess } = reviewCreate\n\n    useEffect(() => {\n\n        if(reviewCreateSuccess){\n            alert('Review Submitted')\n            setRating(0)\n            setComment('')\n            dispatch({ type : REVIEW_CREATE_RESET})\n        }\n       \n        dispatch(fetchProduct(productId))\n\n    }, [dispatch, productId, reviewCreateSuccess])\n\n    const { image, name, rating, numReviews, price, description, countInStock, reviews } = product\n\n    const addToCartHanlder = () => {\n        props.history.push(`/cart/${productId}?qty=${qty}`)\n    }\n\n    const submitHandler = event => {\n        event.preventDefault()\n        dispatch(createProductReview(productId, { rating : reviewRating, comments :  reviewComment}))\n    }\n    return (\n        <>\n            {\n                loading ? <Loader/> : \n                error ? <Message variant=\"danger\" children={error} /> : \n                <>\n                    <Meta description={description} title={name} keyword={name} />\n                    <Link to=\"/\" className=\"btn btn-dark my-3\">Back</Link>\n                    <Row>\n                        <Col md={6}>\n                            <Image src={image} alt={name} fluid/>\n                        </Col>\n                        <Col md={3}>\n                            <ListGroup variant=\"flush\">\n                                <ListGroup.Item>\n                                    <h3>{name}</h3>\n                                </ListGroup.Item>\n                                <ListGroup.Item>\n                                    <Rating \n                                        rating={rating} \n                                        numReviews={numReviews} \n                                        color=\"#f8e825\"/>\n                                </ListGroup.Item>\n                                <ListGroup.Item>Product Price : R{price}</ListGroup.Item>\n                                <ListGroup.Item>Description : {description} </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                        <Col md={3}>\n                            <Card className=\"px-3 py-3\" >\n                                <ListGroup flush className=\"py-1\">\n                                    <Row>\n                                        <Col>Price</Col>\n                                        <Col><strong>{price}</strong></Col>\n                                    </Row>\n                                </ListGroup>\n                                <ListGroup flush className=\"py-1\">\n                                    <Row>\n                                        <Col>Status</Col>\n                                        <Col><strong>{ countInStock > 0 ? 'In Stock' : 'Out of Stock' }</strong></Col>\n                                    </Row>\n                                </ListGroup>\n                                {\n                                    (countInStock > 0) && \n                                        <ListGroup>\n                                        <Row>\n                                            <Col>Qty</Col>\n                                            <Col>\n                                                <Form.Control \n                                                    as=\"select\" \n                                                    value={qty} \n                                                    onChange={ event => {\n                                                    setQty(event.target.value)\n                                                }}>\n                                                    {[...Array(countInStock).keys()].map( x => (\n                                                        <option key={x + 1} value={x+1} className=\"mr-2\">{ x + 1 } </option>\n                                                    ))}\n                                                </Form.Control>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup> \n                                }                                 \n                                <ListGroup flush className=\"py-1\">\n                                    <Button \n                                        onClick={addToCartHanlder}\n                                        type=\"button\" \n                                        disabled={countInStock === 0} \n                                        className=\"rounded\">Add to cart</Button>\n                                </ListGroup>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col md={6} className='mt-5'>\n                            <h2>Reviews</h2>\n                            {\n                                reviews && reviews.length === 0 && <Message>No review </Message>\n                            }\n                            <ListGroup variant='flush'>\n                                {\n                                    reviews && reviews.map (review => (\n                                        <ListGroup.Item key={review._id}>\n                                            <strong>{review.name}</strong>\n                                            <Rating value={review.rating} />\n                                            <p>{review.createdAt.substring(0,10)}</p>\n                                            <p>{review.comment}</p>\n                                        </ListGroup.Item>\n                                    ))\n                                }\n                                <ListGroup.Item>\n                                    <h2>Write a customer review</h2>\n                                    { reviewCreateError && <Message variant='danger'>{reviewCreateError}</Message>}\n                                    {\n                                        userInfo ? (\n                                            <Form onSubmit={submitHandler}>\n                                                <Form.Group controlId='rating'>\n                                                    <Form.Label>Rating</Form.Label>\n                                                    <Form.Control as='select' value={reviewRating} onChange={e => setRating(e.target.value)}>\n                                                        <option> Select rating</option>\n                                                        <option value=\"1\">1 -Poor</option>\n                                                        <option value=\"2\">2 - Fair</option>\n                                                        <option value=\"3\">3 - Good</option>\n                                                        <option value=\"4\">4 - Very Good</option>\n                                                        <option value=\"5\">5 - Excellent</option>\n                                                    </Form.Control>\n                                                </Form.Group>\n                                                <Form.Group controlId='comment'>\n                                                    <Form.Label>Comment</Form.Label>\n                                                    <Form.Control as='textarea' row='3' value={reviewComment} onChange={\n                                                        e => setComment(e.target.value)\n                                                    }></Form.Control>\n                                                </Form.Group>\n                                                <Button type='submit' variant='primary'>Submit</Button>\n                                            </Form>\n                                        ) : \n                                        <Message>\n                                            Please <Link to='/login'>Sign in </Link> to write a review\n                                        </Message>\n                                    }\n                                </ListGroup.Item>\n                            </ListGroup>\n                        </Col>\n                    </Row>\n                </>\n    \n                \n            }\n        </>\n    )\n}\n\nexport default ProductPage\n","import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM , CART_SAVE_SHIIPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../actionTypes/cartActionTypes'\n\nexport const addTocart = (id, qty ) => async (dispatch , getState) => {\n\n    try {\n\n        const { data } = await axios.get(`http://localhost:5000/api/products/${id}`)\n\n        dispatch({\n            type : CART_ADD_ITEM,\n            payload : {\n                product : data._id,\n                name : data.name,\n                image : data.image,\n                price : data.price,\n                countInStock : data.countInStock,\n                qty\n            }\n        })\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const removeFromCart = id => (dispatch, getState) => {\n    try {\n        dispatch({\n            type : CART_REMOVE_ITEM,\n            payload : id\n        })\n        \n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n    } catch (error) {\n        console.log(error.message)\n    }\n}\n\nexport const saveShipingAddress =  data => dispatch => {\n        dispatch({\n            type : CART_SAVE_SHIIPING_ADDRESS,\n            payload : data\n        })\n        localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod =  data => dispatch => {\n    dispatch({\n        type : CART_SAVE_PAYMENT_METHOD,\n        payload : data\n    })\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n\n","import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport { addTocart, removeFromCart } from '../redux/actions/cartAtcions'\nimport Message from '../components/Message'\n\n \nconst CartPage = (props) => {\n\n    const productId = props.match.params.id\n    const qty = props.location.search ? Number(props.location.search.split('=')[1]) : 1\n\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n\n    const { cartItems } = cart\n    \n    useEffect(() => {\n        if(productId){\n            dispatch(addTocart(productId, qty ))\n        }\n    }, [dispatch, productId, qty])\n\n    const removeFromCartHandler = id => {\n        dispatch(removeFromCart(id))\n    }\n    const checkoutHandler = () => {\n        props.history.push('/login?redirect=shipping')\n    } \n\n    return (\n        <Row>\n            <Col md={8}>\n                <h1>Shopping Cart</h1>\n                { \n                    cartItems.length === 0 ? \n                        <Message> Your cart is empty <Link to=\"/\">Go Back</Link></Message> : \n                        (<ListGroup variant=\"flush\">\n                            {\n                                cartItems.map(item => (\n                                    <ListGroup.Item key={item.product}>\n                                        <Row>\n                                           <Col md={2}><Image src={item.image} alt={item.name} fluid rounded /></Col>\n                                           <Col md={3}>\n                                                <Link to={`products/${item.product}`}>{item.name}</Link>\n                                           </Col>\n                                           <Col md={2}> { item.price}</Col>\n                                           <Col md={2}>\n                                                <Form.Control \n                                                        as=\"select\" \n                                                        value = { item.qty}\n                                                        onChange={event => dispatch(addTocart(item.product, Number(event.target.value)))}>\n                                                        {[...Array(item.countInStock).keys()].map( x => (\n                                                            <option key={x + 1} value={x+1} className=\"mr-2\">{ x + 1 } </option>\n                                                        ))}\n                                                </Form.Control>\n                                            </Col>\n                                            <Col md={2}>\n                                                <Button type=\"button\" variant=\"light\" onClick={() => removeFromCartHandler(item.product)}>\n                                                    <i className=\"fas fa-trash\"></i>\n                                                </Button>\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                ))\n                            }\n\n                        </ListGroup>)\n                }\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Subtotal ({ cartItems.reduce((acc, item) => acc + item.qty, 0)}) items </h2>\n                            $ ({ cartItems.reduce((acc, item) => acc + item.qty * item.price , 0).toFixed(2)})\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Button \n                                type=\"button\" \n                                className=\"btn-block\" \n                                disabled={cartItems.length === 0} \n                                onClick={checkoutHandler}>\n                                    Proceed to Checkout \n                                </Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    )\n}\n\nexport default CartPage\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Form = ({children}) => {\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center\">\n                <Col xs={12} md={6}>\n                    { children }\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Form\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader'\nimport { loginUser } from '../redux/actions/userActions';\nimport FormContainer from '../components/Form';\n\n\nconst LoginPage = ({location, history}) => {\n\n    const redirect = location.search ? location.search.split('=')[1] : '/' \n\n    const dispatch = useDispatch()\n    const userLogin = useSelector(state => state.userLogin)\n    const { error , loading, userInfo } = userLogin\n\n    const [ email, setEmail ] = useState(\"\");\n    const [ password, setPassword ] = useState(\"\");\n\n    useEffect(() => {\n        if(userInfo){\n            history.push(redirect);\n        }\n    }, [redirect, history, userInfo ])\n\n    const submitHandler = event => {\n        event.preventDefault();\n        dispatch(loginUser(email, password))\n    }\n\n    return (\n        <FormContainer>\n           <h1>Sign in</h1>\n            { error &&  <Message variant=\"danger\">{ error }</Message>}\n            { loading &&  <Loader/> }\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type='email' placeholder='enter email' value={email} onChange={event => setEmail(event.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='enter password' value={password} onChange={event => setPassword(event.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>Sign In</Button>\n            </Form>\n            <Row className='py-3'>\n                <Col>\n                    New Customer ? <Link to={ redirect ? `/register?redirect=${redirect}` : '/register'}> Register now</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default LoginPage\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader'\nimport { registerUser } from '../redux/actions/userActions';\nimport FormContainer from '../components/Form';\n\n\nconst RegisterPage = ({location, history}) => {\n\n    const redirect = location.search ? location.search.split('=')[1] : '/' \n\n    const dispatch = useDispatch()\n    const userRegister = useSelector(state => state.userRegister)\n    const { error , loading, userInfo } = userRegister\n\n    const [ name, setName ] = useState(\"\");\n    const [ email, setEmail ] = useState(\"\");\n    const [ password, setPassword ] = useState(\"\");\n    const [ confirmPassword, setConfirmPassword ] = useState(\"\");\n    const [ message, setMessage] = useState(null);\n\n    useEffect(() => {\n        if(!userInfo){\n            history.push(redirect);\n        }\n    }, [redirect, history, userInfo ])\n\n    const submitHandler = event => {\n        event.preventDefault();\n        if(password !== confirmPassword){\n            setMessage('Password does not match')\n        }else{\n            dispatch(registerUser(name, email, password))\n        }\n    }\n\n    return (\n        <FormContainer>\n           <h1>Sign up</h1>\n            { message &&  <Message variant=\"danger\">{message}</Message>}\n            { error &&  <Message variant=\"danger\">{ error }</Message>}\n            { loading &&  <Loader/> }\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='name'>\n                    <Form.Label>Your name</Form.Label>\n                    <Form.Control type='text' placeholder='enter your name' value={name} onChange={event => setName(event.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='email'>\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type='email' placeholder='enter email' value={email} onChange={event => setEmail(event.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='password'>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type='password' placeholder='enter password' value={password} onChange={event => setPassword(event.target.value)}></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='confirmPassword'>\n                    <Form.Label>Confirm Password</Form.Label>\n                    <Form.Control type='password' placeholder='confirm password' value={confirmPassword} onChange={event => setConfirmPassword(event.target.value)}></Form.Control>\n                </Form.Group>\n                <Button type='submit' variant='primary'>Sign In</Button>\n            </Form>\n            <Row className='py-3'>\n                <Col>\n                    Already have an account ? <Link to={ redirect ? `/login?login=${redirect}` : '/login'}> LogIn</Link>\n                </Col>\n            </Row>\n        </FormContainer>\n    )\n}\n\nexport default RegisterPage\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport Message from '../components/Message';\nimport Loader from '../components/Loader'\nimport { getUserDetail, updateUserProfil } from '../redux/actions/userActions';\nimport FormContainer from '../components/Form';\nimport { getMyOrders } from '../redux/actions/orderActions';\n\n\nconst ProfilePage = ({location, history}) => {\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error , loading, user } = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userUpdate = useSelector(state => state.userUpdate)\n    const { success } = userUpdate\n\n    const ordersMyList = useSelector(state => state.ordersMyList)\n    const { error : errorOrderList , loading : loadingOrderList, orders } = ordersMyList\n\n    const [ name, setName ] = useState(\"\");\n    const [ email, setEmail ] = useState(\"\");\n    const [ password, setPassword ] = useState(\"\");\n    const [ confirmPassword, setConfirmPassword ] = useState(\"\");\n    const [ message, setMessage] = useState(null);\n\n    useEffect(() => {\n        if(!userInfo){\n            history.push('/login');\n        }else{\n            if(!user.name){\n                dispatch(getUserDetail('profile'))\n                dispatch(getMyOrders())\n            }else{\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [history, userInfo, dispatch, user ])\n\n    const submitHandler = event => {\n        event.preventDefault();\n        if(password !== confirmPassword){\n            setMessage('Password does not match')\n        }else{\n            dispatch(updateUserProfil({id : user._id, name, email, password}))\n        }\n    }\n\n    return (\n        <Row className=\"mt-5\">\n            <Col md={4}>\n            <FormContainer>\n           <h3>My Profile</h3>\n            { message &&  <Message variant=\"danger\">{message}</Message>}\n            { error &&  <Message variant=\"danger\">{ error }</Message>}\n            { success &&  <Message variant=\"success\">Profil Update</Message>}\n            { loading &&  <Loader/> }\n            <Form onSubmit={submitHandler}>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Your name</Form.Label>\n                        <Form.Control type='text' placeholder='enter your name' value={name} onChange={event => setName(event.target.value)}></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='email'>\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type='email' placeholder='enter email' value={email} onChange={event => setEmail(event.target.value)}></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='password'>\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type='password' placeholder='enter password' value={password} onChange={event => setPassword(event.target.value)}></Form.Control>\n                    </Form.Group>\n                    <Form.Group controlId='confirmPassword'>\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type='password' placeholder='confirm password' value={confirmPassword} onChange={event => setConfirmPassword(event.target.value)}></Form.Control>\n                    </Form.Group>\n                    <Button type='submit' variant='primary'>Update </Button>\n                </Form>\n            </FormContainer>\n            </Col>\n            <Col md={8}>\n                <h2>My Orders</h2>\n                { errorOrderList &&  <Message variant=\"danger\">{errorOrderList}</Message> }\n                \n                {\n                    \n                    loadingOrderList ? <Loader />  :\n                    (\n                        <Table striped bordered hover responsive className='table-sm'>\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>DATE</th>\n                                    <th>TOTAL</th>\n                                    <th>PAID</th>\n                                    <th>DELIVERED</th>\n                                    <th></th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    orders.map(order => (\n                                        <tr key={order._id}>\n                                            <td>{order._id}</td>\n                                            <td>{order.createdAt.substring(0,10)}</td>\n                                            <td>{order.totalPrice}</td>\n                                            <td>{order.isPaid ? order.createdAt.substring(0,10) : (<i className=\"fas fa-times\" style={{color:'red'}}></i>)}</td>\n                                            <td>{order.isDelivered ? order.createdAt.substring(0,10) : (<i className=\"fas fa-times\" style={{color:'red'}}></i>)}</td>\n                                            <td>\n                                                <LinkContainer to={`/order/${order._id}`}>\n                                                    <Button variant=\"light\" className=\"btn-sm\">Details</Button>\n                                                </LinkContainer>\n                                            </td>\n                                        </tr>\n                                    )) \n                                } \n                            </tbody>\n                        </Table>\n                    )\n                }\n            </Col>\n        </Row>\n    )\n}\n\nexport default ProfilePage\n","import { ORDER_CREATE_REQUEST,ORDER_CREATE_SUCCESS,ORDER_CREATE_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDERS_REQUEST, ORDERS_FAIL, ORDERS_SUCCESS, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL} from '../actionTypes/orderActionTypes'\nimport { ORDER_DETAILS_REQUEST,ORDER_DETAILS_SUCCESS,ORDER_DETAILS_FAIL} from '../actionTypes/orderActionTypes'\nimport axios from 'axios'\n\nexport const createOrder = order => async(dispatch, getState) => {\n    try {\n        dispatch({ type : ORDER_CREATE_REQUEST })\n\n        const { userLogin : { userInfo } } = getState()\n\n        const config = {\n            headers : {\n                'Content-Type' : 'application/json',\n                Authorization :  `Bearer ${userInfo.token}`\n            }\n        }\n\n        const res = await axios.post('http://localhost:5000/api/orders', order, config)\n\n        const { data } = res\n\n        dispatch({\n            type : ORDER_CREATE_SUCCESS,\n            payload : data.order\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : ORDER_CREATE_FAIL,\n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const getOrderDetails = id => async(dispatch, getState) => {\n\n    try {\n        dispatch({ type : ORDER_DETAILS_REQUEST })\n\n        const { userLogin : { userInfo } } = getState()\n\n        const config = {\n            headers : {\n                Authorization :  `Bearer ${userInfo.token}`\n            }\n        }\n        const res = await axios.get(`http://localhost:5000/api/orders/${id}`, config)\n\n        const { data } = res \n\n        dispatch({\n            type : ORDER_DETAILS_SUCCESS,\n            payload : data.order\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : ORDER_DETAILS_FAIL,\n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const payOrder = (orderId, paymentResult) => async(dispatch, getState) => {\n\n    try {\n        dispatch({ type : ORDER_PAY_REQUEST })\n\n        const { userLogin : { userInfo } } = getState()\n\n        const config = {\n            headers : {\n                'Content-Type' : 'application/json',\n                Authorization :  `Bearer ${userInfo.token}`\n            }\n        }\n        const res = await axios.put(`http://localhost:5000/api/orders/${orderId}/pay`, paymentResult, config)\n\n        const { data } = res \n\n        dispatch({\n            type : ORDER_PAY_SUCCESS,\n            payload : data.order\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : ORDER_PAY_FAIL,\n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const deliverOrder = (order) => async(dispatch, getState) => {\n\n    try {\n        dispatch({ type : ORDER_DELIVER_REQUEST })\n\n        const { userLogin : { userInfo } } = getState()\n\n        const config = {\n            headers : {\n                Authorization :  `Bearer ${userInfo.token}`\n            }\n        }\n        await axios.put(`http://localhost:5000/api/orders/${order._id}/deliver`, {}, config)\n\n        dispatch({\n            type : ORDER_DELIVER_SUCCESS\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : ORDER_DELIVER_FAIL,\n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const getMyOrders = () => async(dispatch, getState) => {\n\n    try {\n        dispatch({ type : ORDERS_REQUEST })\n\n        const { userLogin : { userInfo } } = getState()\n\n        const config = {\n            headers : {\n                Authorization :  `Bearer ${userInfo.token}`\n            }\n        }\n        const res = await axios.get(`http://localhost:5000/api/orders/myorders`, config)\n\n        const { data } = res \n\n        console.log(data)\n\n        dispatch({\n            type : ORDERS_SUCCESS,\n            payload : data.orders\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : ORDERS_FAIL,\n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}\nexport const getOrders = () => async(dispatch, getState) => {\n\n    try {\n        dispatch({ type : ORDER_LIST_REQUEST })\n\n        const { userLogin : { userInfo } } = getState()\n\n        const config = {\n            headers : {\n                Authorization :  `Bearer ${userInfo.token}`\n            }\n        }\n        const res = await axios.get(`http://localhost:5000/api/orders/`, config)\n\n        const { data } = res \n\n        dispatch({\n            type : ORDER_LIST_SUCCESS,\n            payload : data.orders\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : ORDER_LIST_FAIL,\n            payload : error.response && error.response.data.message ? error.response.data.message : error.message\n        })\n    }\n}","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4}) => {\n    return (\n        <Nav className=\"justify-content-center mb-4\">\n            <Nav.Item>\n                {\n                    step1 ? \n                        <LinkContainer to='/login'><Nav.Link>Sign In</Nav.Link></LinkContainer> : \n                        <Nav.Link disabled>Sign In</Nav.Link>\n                }\n            </Nav.Item>\n            <Nav.Item>\n                {\n                    step2 ? \n                        <LinkContainer to='/shipping'><Nav.Link>Shipping</Nav.Link></LinkContainer> : \n                        <Nav.Link disabled>Shipping</Nav.Link>\n                }\n            </Nav.Item>\n            <Nav.Item>\n                {\n                    step3 ? \n                        <LinkContainer to='/payement'><Nav.Link>Payement</Nav.Link></LinkContainer> : \n                        <Nav.Link disabled>Payement</Nav.Link>\n                }\n            </Nav.Item>\n            <Nav.Item>\n                {\n                    step4 ? \n                        <LinkContainer to='/placeorder'><Nav.Link>Place Order</Nav.Link></LinkContainer> : \n                        <Nav.Link disabled>Place Order</Nav.Link>\n                }\n            </Nav.Item>\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport FormContainer from '../components/Form';\nimport { saveShipingAddress } from '../redux/actions/cartAtcions'\nimport CheckoutSteps from '../components/CheckoutSteps'\n \nconst ShippingPage = ({ history}) => {\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart \n\n    const [ address, setAddress] = useState(shippingAddress.address);\n    const [ city, setCity] = useState(shippingAddress.city);\n    const [ postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n    const [ country, setCountry] = useState(shippingAddress.country);\n\n    const submitHandler = event => {\n            event.preventDefault()\n            dispatch(saveShipingAddress({ address, city, postalCode, country}))\n            history.push('/payment')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2/>\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='address'>\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control type='text' placeholder='enter your address' value={address} onChange={event => setAddress(event.target.value)} required></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='city'>\n                    <Form.Label>City</Form.Label>\n                    <Form.Control type='text' placeholder='enter your City' value={city} onChange={event => setCity(event.target.value)} required></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='postalCode'>\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control type='text' placeholder='enter your postal code' value={postalCode} onChange={event => setPostalCode(event.target.value)} required></Form.Control>\n                </Form.Group>\n                <Form.Group controlId='country'>\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control type='text' placeholder='enter your country' value={country} onChange={event => setCountry(event.target.value)} required></Form.Control>\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\">Continue</Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingPage\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport FormContainer from '../components/Form';\nimport { savePaymentMethod } from '../redux/actions/cartAtcions'\nimport CheckoutSteps from '../components/CheckoutSteps'\n \nconst ShippingPage = ({ history}) => {\n\n    const dispatch = useDispatch()\n\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart \n\n    if(!shippingAddress){\n        history.push('/shipping')\n    }\n\n    const [ paymentMethod, setPaymentMethod] = useState('PayPal');\n\n    const submitHandler = event => {\n            event.preventDefault()\n            dispatch(savePaymentMethod(paymentMethod))\n            history.push('/placeorder')\n    }\n\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 step3/>\n            <h1>Payment Method</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId='address'>\n                   <Form.Label as='legent'>Select Method</Form.Label>\n                   <Col>\n                    <Form.Check \n                        type=\"radio\" \n                        label=\"Paypal or Credit Card\" \n                        id=\"PayPal\" name=\"PaymentMethod\" \n                        value=\"Paypal\" \n                        checked\n                        onChange={ event => setPaymentMethod(event.target.value)}\n                        >\n                    </Form.Check>\n                    <Form.Check \n                        type=\"radio\" \n                        label=\"Stripe\" \n                        id=\"Stripe\" name=\"PaymentMethod\" \n                        value=\"Stripe\" \n                        onChange={ event => setPaymentMethod(event.target.value)}\n                        >\n                    </Form.Check>\n                </Col>\n                </Form.Group>\n                <Button type=\"submit\" variant=\"primary\" className=\"mt-3\">Continue</Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingPage\n","import React, { useEffect } from 'react';\nimport {  useDispatch, useSelector } from 'react-redux';\nimport {  Button, Row, Col, ListGroup, Card, Image } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'\nimport { createOrder } from '../redux/actions/orderActions'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\n\nconst PlaceOrderPage = ({history}) => {\n\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n    const orderCreate = useSelector(state => state.orderCreate)\n\n    const { order, success, error } = orderCreate\n\n    const addDecimal = num => ( (Math.round(num * 100) / 100).toFixed(2))\n    \n    cart.itemsPrice = addDecimal(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n    cart.shippingPrice = addDecimal(cart.itemsPrice > 100 ? 0 : 100)\n    cart.taxPrice = addDecimal(Number((0.15 * cart.itemsPrice).toFixed(2)))\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.taxPrice) + Number(cart.shippingPrice)).toFixed(2)\n\n    const { cartItems, shippingAddress, itemsPrice, taxPrice, shippingPrice, totalPrice } = cart\n\n    useEffect(()=>{\n        if(success){\n            history.push(`order/${order._id}`)\n        }\n        // eslint-disable-next-line\n    }, [success,history,order])\n\n    const placeOrderHandler = () => {\n        dispatch(createOrder({\n            orderItems : cartItems,\n            shippingAddress,\n            paymentMethod : true,\n            itemsPrice,\n            taxPrice,\n            shippingPrice,\n            totalPrice\n        }))\n    }\n    \n    return (\n        <>\n        <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Shiiping</h2>\n                            <p>\n                                <strong>Address : </strong>\n                                { cart.shippingAddress.address}, { cart.shippingAddress.city},\n                                { cart.shippingAddress.postalCode}, { cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method : </strong>\n                                { cart.paymentMethod }\n                            </p>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Ordered items</h2>\n                           {\n                               cart.cartItems.length === 0 ? <Message> Your card is empty </Message> : \n                               <ListGroup variant='flush'>\n                                   {\n                                       cart.cartItems.map((item, index) => (\n                                           <ListGroup.Item key={index}>\n                                               <Row>\n                                                   <Col md={1}>\n                                                       <Image src={item.image} alt={item.name} fluid rounded />\n                                                   </Col>\n                                                   <Col>\n                                                        <Link to={`product/${item.product}`}> {item.name}</Link>\n                                                   </Col>\n                                                   <Col md={4}>\n                                                       { item.qty } x ${item.price} = ${ item.qty * item.price}\n                                                    </Col>\n                                               </Row>\n                                           </ListGroup.Item>\n                                       )) \n                                   }\n                               </ListGroup>\n                           }\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {\n                                    error && <Message variant=\"danger\">{error}</Message>\n                                }\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button \n                                    type='button' \n                                    className='btn btn-block' \n                                    disabled={cart.cartItems.length === 0}\n                                    onClick={placeOrderHandler}>\n                                        Place Order\n                                    </Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderPage\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { PayPalButton } from \"react-paypal-button-v2\";\nimport {  useDispatch, useSelector } from 'react-redux';\nimport {  Row, Col, ListGroup, Card, Image, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'\nimport { deliverOrder, getOrderDetails, payOrder } from '../redux/actions/orderActions'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET } from '../redux/actionTypes/orderActionTypes';\n\nconst OrderPage = ({match,history}) => {\n\n    const [ sdkReady, setSdkReady ] = useState(false)\n\n    const orderId = match.params.id\n\n    const dispatch = useDispatch()\n    \n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { userInfo } = userDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading : loadingPay, sucess : successPay } = orderPay\n\n    const orderDeliver = useSelector(state => state.orderDeliver)\n    const { loading : loadingDeliver, sucess : successDeliver } = orderDeliver\n\n    if(!loading){\n        const addDecimal = num => ( (Math.round(num * 100) / 100).toFixed(2))\n        order.itemsPrice = addDecimal(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n    }\n\n    useEffect(() => {\n\n        if(!userInfo){\n            history.push('/login')\n        }\n\n        const addPayPalScript = async () => {\n            const {data : clientId} = await axios.get('http://localhost:5000/api/config/paypal')\n            const script = document.createElement('script')\n            script.type = 'text/javascript'\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n            script.async = true\n            script.onload = () => {\n                setSdkReady(true)\n            }\n            document.body.appendChild(script)\n        }\n\n        if(!order || successPay|| successDeliver || order._id !== orderId) {\n\n            dispatch({ type : ORDER_PAY_RESET })\n            dispatch({ type : ORDER_DELIVER_RESET })\n\n            dispatch(getOrderDetails(orderId))\n        } else if(!order.isPaid){\n            if(!window.paypal){\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, orderId, order, successPay, successDeliver, history, userInfo])\n\n    const successPaymentHandler = (paymentResult) => {\n        dispatch(payOrder(orderId, paymentResult))\n    }\n\n    const deliverHandler = () => {\n        dispatch(deliverOrder(order))\n    }\n\n    return ( loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : \n        <>\n            <h1> Order { order._id}</h1>\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h2>Shiiping</h2>\n                            <p>\n                                <strong>Name : </strong> { order.user.name}\n                            </p>\n                            <p>\n                                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n                            </p>\n                            <p>\n                                <strong>Address : </strong>\n                                { order.shippingAddress.address}, { order.shippingAddress.city},\n                                { order.shippingAddress.postalCode}, { order.shippingAddress.country}\n                            </p>\n                            {\n                                order.isDelivered ? <Message variant=\"success\">Delivered at {order.deliveredAt}</Message> : <Message variant=\"danger\">Not Delivered</Message>\n                            }\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <p>\n                                <strong>Method : </strong>\n                                {order.paymentMethod}\n                            </p>\n                            {\n                                order.isPaid ? <Message variant=\"success\">Paid on {order.isPaidAt}</Message> : <Message variant=\"danger\">Not Paid</Message>\n                            }\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <h2>Ordered items</h2>\n                           {\n                               order.orderItems.length === 0 ? <Message> order is empty </Message> : \n                               <ListGroup variant='flush'>\n                                   {\n                                       order.orderItems.map((item, index) => (\n                                           <ListGroup.Item key={index}>\n                                               <Row>\n                                                    <Col md={1}>\n                                                        <Image src={item.image} alt={item.name} fluid rounded />\n                                                    </Col>\n                                                    <Col>\n                                                            <Link to={`product/${item.product}`}> {item.name}</Link>\n                                                    </Col>\n                                                    <Col md={4}>\n                                                       { item.qty } x ${item.price} = ${ item.qty * item.price}\n                                                    </Col>\n                                               </Row>\n                                           </ListGroup.Item>\n                                       )) \n                                   }\n                               </ListGroup>\n                           }\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${order.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${order.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${order.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${order.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            { !order.isPaid && (\n                                <ListGroup.Item>\n                                    { loadingPay && <Loader />}\n                                    { !sdkReady ? <Loader /> : \n                                        <PayPalButton \n                                            amount={order.totalPrice}\n                                            onSuccess={ successPaymentHandler }\n                                        />\n                                    }\n                                </ListGroup.Item>\n                            )}\n                            {\n                                loadingDeliver && <Loader/>\n                            }\n                            {\n                                userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && \n                                <ListGroup.item>\n                                    <Button type=\"button\" className=\"btn btn-clock\" onClick={deliverHandler}>\n\n                                    </Button>\n                                </ListGroup.item>\n                            }\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default OrderPage\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader'\nimport { getUsersList , deleteUser} from '../redux/actions/userActions';\n\n\nconst UserListPage = ({ history }) => {\n\n    const dispatch = useDispatch()\n\n    const usersList = useSelector(state => state.usersList)\n    const { loading, error, users } = usersList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n    useEffect(() => {\n        if(userInfo && userInfo.isAdmin){\n            dispatch(getUsersList())\n        } else {\n            history.push('/login')\n        }\n    },[dispatch, history, userInfo, successDelete])\n\n    const deleteHandler = id => {\n        if(window.confirm('Are you sure ? ')){\n            dispatch(deleteUser(id))\n        }\n    }\n\n    return (\n        <>\n            <h1>Users</h1>\n            {\n                loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : \n                (\n                    <Table striped bordered hover responsive className=\"table-sm\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>Name</th>\n                                <th>Email</th>\n                                <th>Admin</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                users.map(user => (\n                                    <tr key={user._id}>\n                                        <td>{user.name}</td>\n                                        <td><a href={`mailTo : ${user.email}`}>{user.email}</a></td>\n                                        <td>{\n                                            user.isAdmin ? \n                                            <i className=\"fas fa-check\" style={{color : 'green'}}></i> : \n                                            <i className=\"fas fa-times\" style={{color : 'red'}}></i>\n                                        }</td>\n                                        <td>\n                                            <LinkContainer to={{\n                                                pathname : `/admin/user/${user._id}/edit`,\n                                                state : {\n                                                    userName : user.name,\n                                                    userEmail : user.email,\n                                                    userIsAdmin : user.isAdmin,\n                                                }\n                                            }}>\n                                                <Button variant=\"light\" className=\"btn-sm\">\n                                                    <i className=\"fas fa-edit\"></i>\n                                                </Button>\n                                            </LinkContainer>\n                                            <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(user._id)}>\n                                                <i className=\"fas fa-trash\"></i>\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </Table>\n                )\n            }\n           \n        </>\n    )\n}\n\nexport default UserListPage\n","import React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/Form';\nimport { updateUserAdmin } from '../redux/actions/userActions';\n\n\nconst UserEditPage = ({location, match}) => {\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const userId = match.params.id\n    const { userName, userEmail, userIsAdmin } = location.state\n\n    const [ name, setName ] = useState(userName);\n    const [ email, setEmail ] = useState(userEmail);\n    const [ isAdmin, setIsAdmin] = useState(userIsAdmin);\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { error , loading } = userDetails\n\n    const userUpdateAdmin = useSelector(state => state.userUpdateAdmin)\n    const { user : updatedUser, loading : updateLoading, error : updateError } = userUpdateAdmin\n\n    console.log(userUpdateAdmin)\n\n    useEffect(() => {\n        if(updatedUser){\n            if(updatedUser.name){\n                history.push('/admin/user-list')\n            }\n        }\n\n    }, [updatedUser, history])\n\n    const submitHandler = event => {\n        event.preventDefault();\n        dispatch(updateUserAdmin({ name, email, isAdmin }, userId))\n    }\n\n    return (\n        <>\n            <Link to='/admin/user-list'>Go Back</Link>\n            <FormContainer>\n                <h1>User Edit Screen</h1>\n                    { updateLoading && <Loader />}\n                    { updateError && <Message variant=\"danger\">{ error }</Message>}\n                    { error &&  <Message variant=\"danger\">{ error }</Message>}\n                    { loading ? <Loader/> : \n                        (\n                        <Form onSubmit={submitHandler}>\n                            <Form.Group controlId='name'>\n                                <Form.Label>Your name</Form.Label>\n                                <Form.Control type='text' placeholder='enter your name' value={name} onChange={event => setName(event.target.value)}></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='email'>\n                                <Form.Label>Email address</Form.Label>\n                                <Form.Control type='email' placeholder='enter email' value={email} onChange={event => setEmail(event.target.value)}></Form.Control>\n                            </Form.Group>\n                            <Form.Group controlId='isAdmin'>\n                                <Form.Label>Password</Form.Label>\n                                <Form.Check type='checkbox' label=\"is Admin\" checked={isAdmin} onChange={event => setIsAdmin(event.target.checked)}></Form.Check>\n                            </Form.Group>\n                            <Button type='submit' variant='primary'>Update </Button>\n                        </Form>\n                        )\n                    } \n                   \n                </FormContainer>\n        </>\n       \n    )\n}\n\nexport default UserEditPage\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Col, Row } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader'\nimport { createProduct, deleteProduct, fetchProducts } from '../redux/actions/productActions';\nimport { PRODUCT_CREATE_RESET } from '../redux/actionTypes/productActionTypes';\nimport Paginate from '../components/Paginate';\n\n\nconst ProductListPage = ({ history, match }) => {\n\n    const pageNumber = match.params.pageNumber || 1\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products, pages, page } = productList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const productCreate = useSelector(state => state.productCreate)\n    const { loading : createLoading, error : createError, product, success : createSuccess } = productCreate\n\n    const productDelete = useSelector(state => state.productDelete)\n    const { loading : deleteLoading, error : errorDelete, success } = productDelete\n\n    useEffect(() => {\n        dispatch({ type : PRODUCT_CREATE_RESET})\n        if(userInfo && userInfo.isAdmin){\n            dispatch(fetchProducts())\n        } else {\n            history.push('/login')\n        }\n\n        if(createSuccess){\n            history.push(`/admin/product/${product._id}/edit`)\n        } else {\n            dispatch(fetchProducts('', pageNumber))\n        }\n    },[dispatch, history, userInfo, success, product, createSuccess, pageNumber])\n\n    const handleCreateProduct = () => {\n        dispatch(createProduct())\n    }\n\n    const deleteHandler = id => {\n        if(window.confirm('Are you sure ? ')){\n            dispatch(deleteProduct(id))\n        }\n    }\n\n    return (\n        <>\n            <Row className=\"align-items-center\">\n                <Col>\n                    <h1>Products</h1>\n                </Col>\n                <Col className=\"text-right\">\n                    <Button className=\"my-3\" onClick={handleCreateProduct}>\n                        <i className=\"fas fa-plus\"></i>\n                         Create Product\n                    </Button>\n                </Col>\n            </Row>\n            { createLoading && <Loader />}\n            { createError && <Message variant=\"danger\">{error}</Message>}\n            { deleteLoading && <Loader />}\n            { errorDelete && <Message variant=\"danger\">{error}</Message>}\n            \n            {\n\n                loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : \n                (\n                    <>\n                        <Table striped bordered hover responsive className=\"table-sm\">\n                            <thead>\n                                <tr>\n                                    <th>ID</th>\n                                    <th>Name</th>\n                                    <th>Price</th>\n                                    <th>Category</th>\n                                    <th>Brand</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    products.map(product => (\n                                        <tr key={product._id}>\n                                            <td>{product._id}</td>\n                                            <td>{product.name}</td>\n                                            <td>${product.price}</td>\n                                            <td>{product.category}</td>\n                                            <td>{product.brand}</td>\n                                            <td>\n                                                <LinkContainer to={{\n                                                    pathname : `/admin/product/${product._id}/edit`,\n                                                    state : { product }\n                                                }}>\n                                                    <Button variant=\"light\" className=\"btn-sm\">\n                                                        <i className=\"fas fa-edit\"></i>\n                                                    </Button>\n                                                </LinkContainer>\n                                                <Button variant=\"danger\" className=\"btn-sm\" onClick={() => deleteHandler(product._id)}>\n                                                    <i className=\"fas fa-trash\"></i>\n                                                </Button>\n                                            </td>\n                                        </tr>\n                                    ))\n                                }\n                            </tbody>\n                        </Table>\n                        <Paginate pages={pages} page={page} isAdmin={true}/>\n                    </>\n                )\n            }\n           \n        </>\n    )\n}\n\nexport default ProductListPage\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\nimport axios from 'axios'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/Form'\nimport { fetchProduct, updateProduct } from '../redux/actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../redux/actionTypes/productActionTypes'\n\nconst ProductEditPage = ({ location, match }) => {\n\tconst dispatch = useDispatch()\n\tconst history = useHistory()\n\n\tconst productId = match.params.id\n\n\tconst productDetail = useSelector((state) => state.productDetail)\n\tconst { error, loading, product } = productDetail\n\n\tconst productUpdate = useSelector((state) => state.productUpdate)\n\tconst { error: updateError, loading: updateLoading, success } = productUpdate\n\n\tconst [name, setName] = useState()\n\tconst [price, setPrice] = useState()\n\tconst [image, setImage] = useState()\n\tconst [brand, setBrand] = useState()\n\tconst [category, setCategory] = useState()\n\tconst [description, setDescription] = useState()\n\tconst [countInStock, setCountInStock] = useState()\n\tconst [uploading, setUploading] = useState(false)\n\n\tuseEffect(() => {\n\t\tif (!product.name || product._id !== productId) {\n\t\t\tdispatch(fetchProduct(productId))\n\t\t} else {\n\t\t\tsetName(product.name)\n\t\t\tsetPrice(product.price)\n\t\t\tsetImage(product.image)\n\t\t\tsetBrand(product.brand)\n\t\t\tsetCategory(product.category)\n\t\t\tsetCountInStock(product.countInStock)\n\t\t\tsetDescription(product.description)\n\t\t}\n\n\t\tif (success) {\n\t\t\tdispatch({ type: PRODUCT_UPDATE_RESET })\n\n\t\t\thistory.push('/admin/product-list')\n\t\t}\n\t}, [dispatch, productId, product, success, history])\n\n\tconst uploadHandler = async (event) => {\n\t\tconst file = event.target.files[0]\n        const formData = new FormData()\n        formData.append('image', file)\n\t\tsetUploading(true)\n\n\t\ttry {\n\t\t\tconst config = {\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t}\n\t\t\tconst { data } = await axios.post('http://localhost:5000/api/upload', formData, config)\n\n\t\t\tsetImage(data)\n\t\t\tsetUploading(false)\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t\tsetUploading(false)\n\t\t}\n\t}\n\tconst submitHandler = (event) => {\n\t\tevent.preventDefault()\n\t\tdispatch(\n\t\t\tupdateProduct(\n\t\t\t\t{ name, price, image, brand, category, countInStock, description },\n\t\t\t\tproductId\n\t\t\t)\n\t\t)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Link to='/admin/product-list'>Go Back</Link>\n\t\t\t<FormContainer>\n\t\t\t\t<h1>Edit Product</h1>\n\t\t\t\t{updateLoading && <Loader />}\n\t\t\t\t{updateError && <Message variant='danger'>{error}</Message>}\n\t\t\t\t{error && <Message variant='danger'>{error}</Message>}\n\t\t\t\t{loading ? (\n\t\t\t\t\t<Loader />\n\t\t\t\t) : (\n\t\t\t\t\t<Form onSubmit={submitHandler}>\n\t\t\t\t\t\t<Form.Group controlId='name'>\n\t\t\t\t\t\t\t<Form.Label>Name</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Enter your name'\n\t\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\t\t\tsetName(event.target.value)\n\t\t\t\t\t\t\t\t}></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='price'>\n\t\t\t\t\t\t\t<Form.Label>Price</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tplaceholder='Enter price'\n\t\t\t\t\t\t\t\tvalue={price}\n\t\t\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\t\t\tsetPrice(event.target.value)\n\t\t\t\t\t\t\t\t}></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='image'>\n\t\t\t\t\t\t\t<Form.Label>Image</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Enter image url'\n\t\t\t\t\t\t\t\tvalue={image}\n\t\t\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\t\t\tsetImage(event.target.value)\n\t\t\t\t\t\t\t\t}></Form.Control>\n\t\t\t\t\t\t\t<Form.File\n\t\t\t\t\t\t\t\tid='image-file'\n\t\t\t\t\t\t\t\tlabel='Choose file'\n\t\t\t\t\t\t\t\tcustom\n\t\t\t\t\t\t\t\tonChange={uploadHandler}>\n\t\t\t\t\t\t\t</Form.File>\n                            {uploading && <Loader />}\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='brand'>\n\t\t\t\t\t\t\t<Form.Label>Brand</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Enter brand'\n\t\t\t\t\t\t\t\tvalue={brand}\n\t\t\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\t\t\tsetBrand(event.target.value)\n\t\t\t\t\t\t\t\t}></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='category'>\n\t\t\t\t\t\t\t<Form.Label>Category</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Enter category'\n\t\t\t\t\t\t\t\tvalue={category}\n\t\t\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\t\t\tsetCategory(event.target.value)\n\t\t\t\t\t\t\t\t}></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='countInStock'>\n\t\t\t\t\t\t\t<Form.Label>Count in stock</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\tplaceholder='Enter countInStock'\n\t\t\t\t\t\t\t\tvalue={countInStock}\n\t\t\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\t\t\tsetCountInStock(event.target.value)\n\t\t\t\t\t\t\t\t}></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Form.Group controlId='description'>\n\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tplaceholder='Enter description'\n\t\t\t\t\t\t\t\tvalue={description}\n\t\t\t\t\t\t\t\tonChange={(event) =>\n\t\t\t\t\t\t\t\t\tsetDescription(event.target.value)\n\t\t\t\t\t\t\t\t}></Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t<Button type='submit' variant='primary'>\n\t\t\t\t\t\t\tUpdate{' '}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</FormContainer>\n\t\t</>\n\t)\n}\n\nexport default ProductEditPage\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button, Col, Row } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader'\nimport { getOrders } from '../redux/actions/orderActions';\nimport { useHistory } from 'react-router-dom';\n\n\nconst OrderListPage = ( ) => {\n\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n    \n    const orderList = useSelector(state => state.orderList)\n    const { error, loading, orders } = orderList\n\n    useEffect(() => {\n        if(userInfo && userInfo.isAdmin){\n            dispatch(getOrders())\n        } else {\n            history.push('/login')\n        }\n    },[dispatch, history, userInfo])\n\n    return (\n        <>\n            <Row className=\"align-items-center mt-5\">\n                <Col>\n                    <h1>Orders</h1>\n                </Col>\n            </Row>\n            \n            {\n\n                loading ? <Loader /> : error ? <Message variant=\"danger\">{error}</Message> : \n                (\n                    <Table striped bordered hover responsive className=\"table-sm mt-3\">\n                        <thead>\n                            <tr>\n                                <th>ID</th>\n                                <th>User</th>\n                                <th>Date</th>\n                                <th>Total Price </th>\n                                <th>Paid</th>\n                                <th>Delivered</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                orders.map(order => (\n                                    <tr key={order._id}>\n                                        <td>{order._id}</td>\n                                        <td>{order.user && order.user.name }</td>\n                                        <td>{order.createdAt.substring(0,10)}</td>\n                                        <td>${order.totalPrice}</td>\n                                        <td>{\n                                            order.isPaid ? \n                                            order.paidAt.substring(0,10) : \n                                            <i className=\"fas fa-times\" style={{color : 'red'}}></i>\n                                        }</td>\n                                        <td>{\n                                            order.isDelivered ? \n                                            order.deliveredAt.substring(0,10) : \n                                            <i className=\"fas fa-times\" style={{color : 'red'}}></i>\n                                        }</td>\n                                        <td>\n                                            <LinkContainer to={`/order/${order._id}/`}>\n                                                    <Button variant=\"light\" className=\"btn-sm\">\n                                                        Detail\n                                                    </Button>\n                                            </LinkContainer>\n                                        </td>\n                                    </tr>\n                                ))\n                            }\n                        </tbody>\n                    </Table>\n                )\n            }\n           \n        </>\n    )\n}\n\nexport default OrderListPage\n","import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport { Route } from 'react-router-dom'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomePage from './container/HomePage'\nimport ProductPage from './container/ProductPage'\nimport CartPage from './container/CartPage'\nimport LoginPage from './container/LoginPage'\nimport RegisterPage from './container/RegisterPage'\nimport ProfilePage from './container/ProfilePage'\nimport ShippingPage from './container/ShippingPage'\nimport PaymentMethodPage from './container/PayementPage'\nimport PlaceOrderPage from './container/PlaceOrderPage'\nimport OrderPage from './container/OrderPage'\nimport UserListPage from './container/UserListPage'\nimport UserEditPage from './container/UserEditPage'\nimport ProductListPage from './container/ProductListPage'\nimport ProductEditPage from './container/ProductEditPage'\nimport OrderListPage from './container/OrderListPage'\n\n\nconst App = () => {\n\treturn (\n\t\t<div>\n\t\t\t<Header />\n\t\t\t<main className=\"py-4\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Route path=\"/\" exact component={HomePage} />\n\t\t\t\t\t<Route path=\"/search/:keyword\" exact component={HomePage} />\n\t\t\t\t\t<Route path=\"/page/:pageNumber\" exact component={HomePage} />\n\t\t\t\t\t<Route path=\"/search/:keyword/page/:pageNumber\" exact component={HomePage} />\n\t\t\t\t\t<Route path=\"/login\" exact component={LoginPage} />\n\t\t\t\t\t<Route path=\"/register\" exact component={RegisterPage} />\n\t\t\t\t\t<Route path=\"/profile\" exact component={ProfilePage} />\n\t\t\t\t\t<Route path=\"/shipping\" exact component={ShippingPage} />\n\t\t\t\t\t<Route path=\"/payment\" exact component={PaymentMethodPage} />\n\t\t\t\t\t<Route path=\"/placeorder\" exact component={PlaceOrderPage} />\n\t\t\t\t\t<Route path=\"/order/:id\" exact component={OrderPage} />\n\t\t\t\t\t<Route path=\"/products/:id\" exact component={ProductPage} />\n\t\t\t\t\t<Route path=\"/cart/:id\" component={CartPage} />\n\n\t\t\t\t\t<Route path=\"/admin/product-list\" exact component={ProductListPage} />\n\t\t\t\t\t<Route path=\"/admin/product-list/:pageNumber\" exact component={ProductListPage} />\n\t\t\t\t\t<Route path=\"/admin/product/:id/edit\" exact component={ProductEditPage} />\n\t\t\t\t\t<Route path=\"/admin/user-list\" exact component={UserListPage} />\n\t\t\t\t\t<Route path=\"/admin/user/:id/edit\" exact component={UserEditPage} />\n\t\t\t\t\t<Route path=\"/admin/order-list\" exact component={OrderListPage} />\n\t\t\t\t</Container>\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from './redux/store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( \n<React.StrictMode >\n    <BrowserRouter>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </BrowserRouter>\n</React.StrictMode>, document.getElementById('root')\n);\n\nserviceWorker.unregister();"],"sourceRoot":""}